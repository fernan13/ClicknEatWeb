<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Usuario extends \AppBundle\Entity\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'facebook_id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'facebook_access_token', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'google_id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'google_access_token', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'perfil', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'tokens', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'publicaciones', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'reservas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'conversacionesIniciadas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'conversacionesRecibidas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'mensajes', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'metadatas', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'facebook_id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'facebook_access_token', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'google_id', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'google_access_token', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'perfil', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'tokens', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'publicaciones', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'reservas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'conversacionesIniciadas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'conversacionesRecibidas', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'mensajes', '' . "\0" . 'AppBundle\\Entity\\Usuario' . "\0" . 'metadatas', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Usuario $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookId($facebook_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookId', [$facebook_id]);

        return parent::setFacebookId($facebook_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookId', []);

        return parent::getFacebookId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookAccessToken($facebook_access_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookAccessToken', [$facebook_access_token]);

        return parent::setFacebookAccessToken($facebook_access_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookAccessToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookAccessToken', []);

        return parent::getFacebookAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleId($google_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleId', [$google_id]);

        return parent::setGoogleId($google_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleId', []);

        return parent::getGoogleId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleAccessToken($google_access_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleAccessToken', [$google_access_token]);

        return parent::setGoogleAccessToken($google_access_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleAccessToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleAccessToken', []);

        return parent::getGoogleAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerfil($perfil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerfil', [$perfil]);

        return parent::setPerfil($perfil);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerfil', []);

        return parent::getPerfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setTokens($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokens', [$token]);

        return parent::setTokens($token);
    }

    /**
     * {@inheritDoc}
     */
    public function addToken($tokenAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addToken', [$tokenAdd]);

        return parent::addToken($tokenAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTokens', []);

        return parent::getTokens();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublicacion($publicacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublicacion', [$publicacion]);

        return parent::addPublicacion($publicacion);
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicaciones($publicaciones)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicaciones', [$publicaciones]);

        return parent::setPublicaciones($publicaciones);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicaciones()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicaciones', []);

        return parent::getPublicaciones();
    }

    /**
     * {@inheritDoc}
     */
    public function addReserva($reserva)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReserva', [$reserva]);

        return parent::addReserva($reserva);
    }

    /**
     * {@inheritDoc}
     */
    public function setReservas($reservas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservas', [$reservas]);

        return parent::setReservas($reservas);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservas', []);

        return parent::getReservas();
    }

    /**
     * {@inheritDoc}
     */
    public function addConversacionIniciada($conversacionIniciada)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConversacionIniciada', [$conversacionIniciada]);

        return parent::addConversacionIniciada($conversacionIniciada);
    }

    /**
     * {@inheritDoc}
     */
    public function setConversacionesIniciadas($conversacionIniciadas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversacionesIniciadas', [$conversacionIniciadas]);

        return parent::setConversacionesIniciadas($conversacionIniciadas);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversacionesIniciadas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversacionesIniciadas', []);

        return parent::getConversacionesIniciadas();
    }

    /**
     * {@inheritDoc}
     */
    public function addConversacionRecibida($conversacionRecibida)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConversacionRecibida', [$conversacionRecibida]);

        return parent::addConversacionRecibida($conversacionRecibida);
    }

    /**
     * {@inheritDoc}
     */
    public function setConversacionesRecibidas($conversacionesRecibidas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversacionesRecibidas', [$conversacionesRecibidas]);

        return parent::setConversacionesRecibidas($conversacionesRecibidas);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversacionesRecibidas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversacionesRecibidas', []);

        return parent::getConversacionesRecibidas();
    }

    /**
     * {@inheritDoc}
     */
    public function getMensajes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMensajes', []);

        return parent::getMensajes();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadatas($metadatas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadatas', [$metadatas]);

        return parent::setMetadatas($metadatas);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadatas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadatas', []);

        return parent::getMetadatas();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray($array)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', [$array]);

        return parent::fromArray($array);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', []);

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', []);

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', []);

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', []);

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', [$usernameCanonical]);

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', [$emailCanonical]);

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$boolean]);

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', [$boolean]);

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$time]);

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', [$confirmationToken]);

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', [$date]);

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', []);

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', [$ttl]);

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', []);

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', [$name]);

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
