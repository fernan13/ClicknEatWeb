<?php

namespace Proxies\__CG__\AppBundle\Entity\Usuario;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Usuario extends \AppBundle\Entity\Usuario\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'nombreUsuario', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'clave', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'correo', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'perfil', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'tokens', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'publicaciones', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'reservas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'conversacionesIniciadas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'conversacionesRecibidas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'mensajes'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'nombreUsuario', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'clave', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'correo', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'perfil', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'tokens', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'publicaciones', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'reservas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'conversacionesIniciadas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'conversacionesRecibidas', '' . "\0" . 'AppBundle\\Entity\\Usuario\\Usuario' . "\0" . 'mensajes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Usuario $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreUsuario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreUsuario', []);

        return parent::getNombreUsuario();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreUsuario($nombreUsuario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreUsuario', [$nombreUsuario]);

        return parent::setNombreUsuario($nombreUsuario);
    }

    /**
     * {@inheritDoc}
     */
    public function getClave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClave', []);

        return parent::getClave();
    }

    /**
     * {@inheritDoc}
     */
    public function setClave($clave)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClave', [$clave]);

        return parent::setClave($clave);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerfil', []);

        return parent::getPerfil();
    }

    /**
     * {@inheritDoc}
     */
    public function getCorreo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorreo', []);

        return parent::getCorreo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorreo($correo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorreo', [$correo]);

        return parent::setCorreo($correo);
    }

    /**
     * {@inheritDoc}
     */
    public function setTokens($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokens', [$token]);

        return parent::setTokens($token);
    }

    /**
     * {@inheritDoc}
     */
    public function addToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addToken', [$token]);

        return parent::addToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTokens', []);

        return parent::getTokens();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublicacion($publicacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublicacion', [$publicacion]);

        return parent::addPublicacion($publicacion);
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicaciones($publicaciones)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicaciones', [$publicaciones]);

        return parent::setPublicaciones($publicaciones);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicaciones()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicaciones', []);

        return parent::getPublicaciones();
    }

    /**
     * {@inheritDoc}
     */
    public function addReserva($reserva)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReserva', [$reserva]);

        return parent::addReserva($reserva);
    }

    /**
     * {@inheritDoc}
     */
    public function setReservas($reservas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservas', [$reservas]);

        return parent::setReservas($reservas);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservas', []);

        return parent::getReservas();
    }

    /**
     * {@inheritDoc}
     */
    public function addConversacionIniciada($conversacionIniciada)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConversacionIniciada', [$conversacionIniciada]);

        return parent::addConversacionIniciada($conversacionIniciada);
    }

    /**
     * {@inheritDoc}
     */
    public function setConversacionesIniciadas($conversacionIniciadas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversacionesIniciadas', [$conversacionIniciadas]);

        return parent::setConversacionesIniciadas($conversacionIniciadas);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversacionesIniciadas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversacionesIniciadas', []);

        return parent::getConversacionesIniciadas();
    }

    /**
     * {@inheritDoc}
     */
    public function addConversacionRecibida($conversacionRecibida)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConversacionRecibida', [$conversacionRecibida]);

        return parent::addConversacionRecibida($conversacionRecibida);
    }

    /**
     * {@inheritDoc}
     */
    public function setConversacionesRecibidas($conversacionesRecibidas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversacionesRecibidas', [$conversacionesRecibidas]);

        return parent::setConversacionesRecibidas($conversacionesRecibidas);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversacionesRecibidas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversacionesRecibidas', []);

        return parent::getConversacionesRecibidas();
    }

    /**
     * {@inheritDoc}
     */
    public function getMensajes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMensajes', []);

        return parent::getMensajes();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

}
